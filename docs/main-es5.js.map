{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/post-dialog/post-dialog.component.ts","webpack:///src/app/components/post-dialog/post-dialog.component.html","webpack:///src/app/shared/service/http.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","httpService","dialogService","title","topic","scrolling","s","target","scrollingElement","sc","scrollTop","window","innerHeight","scrollHeight","getRedditPost","redditData","subscribe","result","push","download","addEventListener","console","log","post","open","context","timeStamp","Date","val","selBox","document","createElement","style","position","left","top","opacity","value","body","appendChild","focus","select","execCommand","removeChild","removeEventListener","selector","templateUrl","styleUrls","AppModule","name","declarations","providers","bootstrap","PostDialogComponent","dialogRef","data","close","HttpService","httpClient","redditUrl","limit","after","get","pipe","handleError","error","status","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { PostDialogComponent } from './components/post-dialog/post-dialog.component';\nimport { HttpService } from './shared/service/http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy, OnChanges {\n  public title = 'TG-TEST';\n  public redditData: {};\n  public topic = \"golf\";\n\n  constructor(\n    private httpService: HttpService,\n    private dialogService: NbDialogService) {}\n  \n  ngOnInit(): void {\n    this.download();\n    window.addEventListener('scroll', this.scrolling, true)\n  }\n\n  ngOnChanges(): void {\n    console.log(this.topic);\n  }\n\n  public download(): void {\n    this.httpService.getRedditPost(this.topic, 10).subscribe((result) => {\n      this.redditData = result;\n    });\n  }\n\n  public openThread(post: any) {\n    this.dialogService.open(PostDialogComponent, {\n      context: post\n    })\n  }\n\n  public getDate(timeStamp): Date {\n    return new Date(timeStamp);\n  }\n\n  public copyMessage(val: string){\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  public scrolling=(s)=>{\n    if (s.target.scrollingElement) {\n      let sc = s.target.scrollingElement.scrollTop;\n      if (sc + window.innerHeight === s.target.scrollingElement.scrollHeight) {\n        this.httpService.getRedditPost(this.topic, 10, this.redditData['data']['after']).subscribe((result) => {\n          this.redditData['data']['children'].push(...result['data']['children']);\n          this.redditData['data']['after'] = result['data']['after'];\n        });\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('scroll', this.scrolling, true)\n  }\n}\n","<nb-layout>\n  <nb-layout-header>\n  <h3>Reddit Mini</h3>\n  <input class=\"topic-input\" type=\"text\" nbInput fieldSize=\"large\" placeholder=\"{{topic}}\" [(ngModel)]=\"topic\">\n  <button nbButton status=\"danger\" (click)=\"download()\">Load</button>\n  </nb-layout-header>\n  <nb-layout-column (scroll)=\"scrolling($event)\" class=\"colored-column-info post-container\" *ngIf=\"redditData\">\n    <ng-container *ngFor=\"let post of redditData['data']['children']\">\n      \n      <nb-card accent=\"danger\" class=\"post\">\n          <nb-card-header class=\"post-header\" (click)=\"openThread(post)\">\n            <p>{{post.data.author}} - {{post.data.created * 1000 | date : 'short'}}</p>\n            <h6>{{post.data.title}}</h6>\n          </nb-card-header>\n          <nb-card-body (click)=\"openThread(post)\" *ngIf=\"post.data.preview && post.data.preview.enabled\"  class=\"post-body\">\n            <img class=\"thumbnail\" [src]=\"post.data.preview.images[0].source.url\" alt=\"thumbnail\">\n          </nb-card-body>\n          <nb-card-footer class=\"post-footer\">\n            <div class=\"post-info\">\n              <nb-icon icon=\"heart\"></nb-icon>\n              {{post.data.score}}\n            </div>\n            <div class=\"post-info\">\n              <nb-icon icon=\"message-square\"></nb-icon>\n              {{post.data.num_comments}} comments\n            </div>\n            <div (click)=\"copyMessage(post.data.url)\" class=\"post-info copy\">\n              <nb-icon icon=\"link-2\"></nb-icon>\n              Copy link\n            </div>\n          </nb-card-footer>\n      </nb-card>\n\n    </ng-container>\n  </nb-layout-column>\n</nb-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HttpService } from './shared/service/http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbSidebarModule, NbButtonModule, NbCardModule, NbIconModule, NbDialogModule, NbInputModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { RouterModule } from '@angular/router';\nimport { PostDialogComponent } from './components/post-dialog/post-dialog.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NbThemeModule.forRoot({ name: 'cosmic' }),\n    NbLayoutModule,\n    NbEvaIconsModule,\n    RouterModule,\n    NbSidebarModule,\n    NbButtonModule,\n    NbCardModule,\n    NbIconModule,\n    NbInputModule,\n    NbButtonModule,\n    NbDialogModule.forRoot()\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { NbDialogRef, NB_DIALOG_CONFIG } from '@nebular/theme';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.scss']\n})\nexport class PostDialogComponent implements OnInit {\n\n  constructor(protected dialogRef: NbDialogRef<PostDialogComponent>, @Inject(NB_DIALOG_CONFIG) public data) { }\n\n  ngOnInit(): void {\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","\n<nb-card class=\"card\">\n<nb-card-header>\n    <h2>{{data.title}}</h2>\n    </nb-card-header>\n    <nb-card-body>\n    <pre>{{data.selftext}}</pre>\n    <img *ngIf=\"data.preview && data.preview.enabled\" class=\"thumbnail\" [src]=\"data.preview.images[0].source.url\" alt=\"thumbnail\">\n</nb-card-body>\n</nb-card>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError} from 'rxjs';\nimport { catchError } from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  redditUrl = \"http://www.reddit.com/r/\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getRedditPost(topic: string, limit?: number, after?): Observable<any> {\n    if(after) {\n     return this.httpClient.get(this.redditUrl+topic+'.json?raw_json=1&limit='+limit+'&after='+after).pipe(catchError(this.handleError));\n    }\n    return this.httpClient.get(this.redditUrl+topic+'.json?raw_json=1&limit='+limit).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}